{
    "Parameters": {
        "CidrBlockForVPC": {
            "Description": "CidrBlockForVPC",
            "Type": "String",
            "Default": "186.0.0.0/24"
        },
        "CidrBlockForSubnet1": {
            "Description": "Cidr Block For Subnet1",
            "Type": "String",
            "Default": "186.0.0.0/25"
        },
        "CidrBlockForSubnet2": {
            "Description": "Cidr Block For Subnet2",
            "Type": "String",
            "Default": "186.0.0.128/25"
        },
        "AvailabilityZoneForSubnet1": {
            "Description": "AvailabilityZone For Subnet1",
            "Type": "String",
            "Default": "us-east-1c"
        },
        "AvailabilityZoneForSubnet2": {
            "Description": "AvailabilityZone For Subnet2",
            "Type": "String",
            "Default": "us-east-1b"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "CidrBlockForVPC"
                }
            }
        },
        "Subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneForSubnet1"
                },
                "CidrBlock": {
                    "Ref": "CidrBlockForSubnet1"
                }
            }
        },
        "Subnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneForSubnet2"
                },
                "CidrBlock": {
                    "Ref": "CidrBlockForSubnet2"
                }
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Scheme": "internal",
                "Subnets": [
                    {
                        "Ref": "Subnet1"
                    },
                    {
                        "Ref": "Subnet2"
                    }
                ]
            }
        },
        "TargetGroup1": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 1000,
                "Protocol": "HTTP",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "TargetGroup2": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 2000,
                "Protocol": "HTTP",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "ListenerRule1": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup1"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "http-header",
                        "HttpHeaderConfig": {
                            "HttpHeaderName": "User-Agent",
                            "Values": [
                                "Mozilla"
                            ]
                        }
                    },
                    {
                        "Field": "http-header",
                        "HttpHeaderConfig": {
                            "HttpHeaderName": "Referer",
                            "Values": [
                                "https://www.amazon.com/"
                            ]
                        }
                    }
                ],
                "ListenerArn": {
                    "Ref": "Listener"
                },
                "Priority": 1
            }
        },
        "ListenerRule2": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup2"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "http-header",
                        "HttpHeaderConfig": {
                            "HttpHeaderName": "User-Agent",
                            "Values": [
                                "Chrome"
                            ]
                        }
                    }
                ],
                "ListenerArn": {
                    "Ref": "Listener"
                },
                "Priority": 2
            }
        },
        "Listener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup1"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": "8000",
                "Protocol": "HTTP"
            }
        }
    },
    "Outputs": {
        "LoadBalancer": {
            "Value": {
                "Ref": "LoadBalancer"
            }
        },
        "TargetGroup1": {
            "Value": {
                "Ref": "TargetGroup1"
            }
        },
        "TargetGroup2": {
            "Value": {
                "Ref": "TargetGroup2"
            }
        },
        "ListenerArn": {
            "Value": {
                "Ref": "Listener"
            }
        },
        "ListenerRule1Arn": {
            "Value": {
                "Ref": "ListenerRule1"
            }
        },
        "ListenerRule2Arn": {
            "Value": {
                "Ref": "ListenerRule2"
            }
        },
        "LoadBalancersAssociatedWithTargetGroup1": {
            "Description": "LoadBalancers associated with TargetGroup",
            "Value": {
                "Fn::Select": [
                    "0",
                    {
                        "Fn::GetAtt": [
                            "TargetGroup1",
                            "LoadBalancerArns"
                        ]
                    }
                ]
            }
        },
        "LoadBalancersAssociatedWithTargetGroup2": {
            "Description": "LoadBalancers associated with TargetGroup",
            "Value": {
                "Fn::Select": [
                    "0",
                    {
                        "Fn::GetAtt": [
                            "TargetGroup2",
                            "LoadBalancerArns"
                        ]
                    }
                ]
            }
        },
        "TargetGroupFullName1": {
            "Description": "FullName of TargetGroup1",
            "Value": {
                "Fn::GetAtt": [
                    "TargetGroup1",
                    "TargetGroupFullName"
                ]
            }
        },
        "TargetGroupFullName2": {
            "Description": "FullName of TargetGroup2",
            "Value": {
                "Fn::GetAtt": [
                    "TargetGroup2",
                    "TargetGroupFullName"
                ]
            }
        }
    }
}
